var iterations
copy REG_A to var:iterations

// Let's set background color to cyan:
write COLOR_CYAN to REG_A
write SYS_CALL_SET_BACKGROUND to REG_D
write OP_SYS_CALL to REG_OP
cpu_exec

// Define a bitmap (based on https://pin.it/2NMEPwMLh )
write "cccccccccccccccccccccccccccc" to 170
write "cccccccccccccccccccccccccccc" to 171
write "cccccccccccccccccccccccccccc" to 172
write "cccccccccccccccccccccccccccc" to 173
write "ccccccccccyyyyyyycccccccccccc" to 174
write "cccccccccyyyyyyyyyccccccccccc" to 175
write "ccccccccyybbyyybbyyccccccccc" to 176
write "ccccccccBbwBbBbwBbBccccccccc" to 177
write "ccccccccBbwwbBbwwbBccccccccc" to 178
write "ccccccccyybbyyybbyyccccccccc" to 179
write "ccccccccyyyyyyyyyyycccccccccc" to 180
write "ccccccccyyByyyyyByycccccccccc" to 181
write "ccccccccyyyBBBBByyycccccccccc" to 182
write "ccccccccbyyyyyyyyybcccccccccc" to 183
write "ccccccccybbbbbbbbbycccccccccc" to 184
write "ccccccccyybbbbbbbyycccccccccc" to 185
write "ccccccccyybbbbbbbyycccccccccc" to 186
write "ccccccccybbbbbbbbbycccccccccc" to 187
write "cccccccBBbbbbbbbbbBBccccccccc" to 188
write "ccccccccBbbbbbbbbbBcccccccccc" to 189
write "ccccccccccBBcccBBcccccccccccc" to 190
write "cccccccccBBBcccBBBccccccccccc" to 191
write "cccccccccccccccccccccccccccc" to 192
write "cccccccccccccccccccccccccccc" to 193
write "cccccccccccccccccccccccccccc" to 194

label start
    copy var:iterations to REG_A
    write OP_DECR to REG_OP
    cpu_exec
    copy REG_RES to var:iterations
    copy var:iterations to REG_A
    write 0 to REG_B
    write OP_CMP_EQ to REG_OP
    cpu_exec
    jump_if label:exit

    var counter

    // Let's move up
    write 170 to var:counter
    label loop_move_up
        copy var:counter to REG_A
        write OP_INCR to REG_OP
        cpu_exec
        copy REG_RES to var:counter

        copy var:counter to REG_A
        write 21 to REG_B
        write OP_ADD to REG_OP
        cpu_exec

        copy var:counter to REG_A
        copy REG_RES to REG_B
        write SYS_CALL_RENDER_BITMAP to REG_D
        write OP_SYS_CALL to REG_OP
        cpu_exec

        write "0.1" to REG_A
        write SYS_CALL_SLEEP to REG_D
        write OP_SYS_CALL to REG_OP
        cpu_exec

        copy var:counter to REG_A
        write 174 to REG_B
        write OP_CMP_NEQ to REG_OP
        cpu_exec
        jump_if label:loop_move_up

    // let's move down
    label loop_move_down
        copy var:counter to REG_A
        write OP_DECR to REG_OP
        cpu_exec
        copy REG_RES to var:counter

        copy var:counter to REG_A
        write 21 to REG_B
        write OP_ADD to REG_OP
        cpu_exec

        copy var:counter to REG_A
        copy REG_RES to REG_B
        write SYS_CALL_RENDER_BITMAP to REG_D
        write OP_SYS_CALL to REG_OP
        cpu_exec

        write "0.1" to REG_A
        write SYS_CALL_SLEEP to REG_D
        write OP_SYS_CALL to REG_OP
        cpu_exec

        write 170 to REG_A
        copy var:counter to REG_B
        write OP_CMP_LT to REG_OP
        cpu_exec
        jump_if label:loop_move_down

    // let's shift bitmap to the right
        write 170 to var:counter
    label shift_right
        write "c" to REG_A
        copy *var:counter to REG_B
        write "" to REG_C
        write OP_CONCAT_WITH to REG_OP
        cpu_exec
        copy REG_RES to *var:counter

        copy var:counter to REG_A
        write OP_INCR to REG_OP
        cpu_exec
        copy REG_RES to var:counter

        copy var:counter to REG_A
        write 192 to REG_B
        write OP_CMP_LT to REG_OP
        cpu_exec
        jump_if label:shift_right

jump label:start

label exit
    write COLOR_NO to REG_A
    write SYS_CALL_SET_BACKGROUND to REG_D
    write OP_SYS_CALL to REG_OP
    cpu_exec

    // exit with 0:
    write 0 to REG_A
    write SYS_CALL_EXIT to REG_D
    write OP_SYS_CALL to REG_OP
    cpu_exec
